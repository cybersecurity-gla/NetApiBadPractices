name: DeepSource Test Coverage

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  DOTNET_VERSION: '8.0.x'

jobs:
  test-and-report-coverage:
    name: Run Tests and Report Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        # Uses the PR head SHA to prevent analysis of a merge commit
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --configuration Release --no-restore

      - name: Run tests with coverage collection
        # Generates a coverage report in Cobertura format
        run: |
          dotnet test \
            --configuration Release \
            --collect:"XPlat Code Coverage" \
            --results-directory /tmp/test-results/

      - name: Find and print coverage file
        run: |
          find /tmp/test-results -name "coverage.cobertura.xml" -type f | head -1 | xargs cat || echo "Coverage file not found."

      - name: Install DeepSource CLI
        run: curl -s https://deepsource.io/cli | sh

      - name: Report coverage to DeepSource
        # Reports the coverage file to DeepSource
        run: |
          COVERAGE_FILE=$(find /tmp/test-results -name "coverage.cobertura.xml" -type f | head -1)
          if [ -f "$COVERAGE_FILE" ]; then
            ./bin/deepsource report \
              --analyzer test-coverage \
              --key csharp \
              --value-file "$COVERAGE_FILE"
          else
            echo "Coverage file not found, skipping DeepSource report"
            exit 1
          fi
        env:
          DEEPSOURCE_DSN: ${{ secrets.DEEPSOURCE_DSN }}